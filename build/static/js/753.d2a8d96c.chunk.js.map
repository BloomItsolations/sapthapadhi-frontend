{"version":3,"file":"static/js/753.d2a8d96c.chunk.js","mappings":"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","sources":["pages/auth/login.jsx"],"sourcesContent":["import * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport React, { useState } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Logo from '../../components/logo';\r\nimport { alpha, useTheme } from '@mui/material/styles';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Stack,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n} from '@mui/material';\r\n\r\nimport { useRouter } from '../../routes/hooks';\r\n\r\nimport { bgGradient } from '../../theme/css';\r\n\r\nimport Iconify from '../../components/iconify';\r\n\r\nimport { userLogin, clearError } from '../../store/authSlice';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport default function LoginPage() {\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const router = useRouter();\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  // Access the auth state from the Redux store\r\n  const { loading, error, success } = useSelector(state => state.auth);\r\n    let myplan=JSON.parse(localStorage.getItem('myplan'));\r\n   console.log(\"MyPlan\",myplan)\r\n  let redirectPath = location.state?.from?.pathname || (myplan?.amount ? '/app/dashboard' :  '/pricing');\r\n     console.log(\"redirectPath\",redirectPath);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      phone: '',\r\n      password: '',\r\n    },\r\n    validationSchema: Yup.object({\r\n      phone: Yup.string().required('Required'),\r\n      password: Yup.string().required('Required'),\r\n    }),\r\n    onSubmit: values => {\r\n      dispatch(clearError());\r\n      dispatch(userLogin(values))\r\n        .then(res => {\r\n          if (!res.error) {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: 'Success!',\r\n              text: 'Login Successful',\r\n            });\r\n            router.push(redirectPath);\r\n            dispatch(clearError());\r\n          } else {\r\n            Swal.fire({\r\n              icon: 'error',\r\n              title: 'Oops...',\r\n              text: res.payload,\r\n            });\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.error('Login failed:', err);\r\n        });\r\n    },\r\n  });\r\n\r\n  const { values, handleChange, handleSubmit, handleBlur, touched, errors } =\r\n    formik;\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Login | sapthapadhi </title>\r\n      </Helmet>\r\n      <Grid\r\n        container\r\n        sx={{\r\n          minHeight: '100vh',\r\n          margin: 0,\r\n        }}\r\n      >\r\n        <Grid item xs={0} sm={6} md={7}>\r\n          <Box\r\n              sx={{\r\n              ...bgGradient({\r\n                color: alpha(theme.palette.background.default, 0.1),\r\n                imgUrl: '/assets/background/image1.png',\r\n              }),\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              height: '100vh',\r\n              margin: 0,\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={5}>\r\n          <Stack\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            sx={{\r\n              height: 1,\r\n              width: 1,\r\n              backgroundColor: theme.palette.background.paper,\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                p: 3,\r\n                width: 1,\r\n                maxWidth: 400,\r\n                textAlign: 'center',\r\n              }}\r\n            >\r\n              {/* <Logo /> */}\r\n              <Typography\r\n                variant=\"h3\"\r\n                paddingY={1}\r\n                textAlign={'center'}\r\n                sx={{ color: theme => theme.palette.primary.main }}\r\n              >\r\n                Sign in to sapthapadhi\r\n              </Typography>\r\n\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  flexDirection: 'row',\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  gap: 1,\r\n                }}\r\n              >\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  textAlign=\"center\"\r\n                  sx={{ color: theme.palette.text.primary }}\r\n                >\r\n                  Donâ€™t have an account?{' '}\r\n                </Typography>\r\n                <Link to=\"/register\" variant=\"subtitle2\">\r\n                  <Typography\r\n                    variant=\"body1\"\r\n                    textAlign=\"center\"\r\n                    sx={{ color: theme.palette.secondary.main }}\r\n                  >\r\n                    Join Now.\r\n                  </Typography>\r\n                </Link>\r\n              </Box>\r\n\r\n              <Box component=\"form\" onSubmit={handleSubmit}>\r\n                <Stack spacing={3} marginY={4}>\r\n                  <TextField\r\n                    InputLabelProps={{ shrink: true }}\r\n                    name=\"phone\"\r\n                    sx={{\r\n                      input: { color: theme.palette.text.primary },\r\n                      color: theme.palette.text.primary,\r\n                    }}\r\n                    label={'Mobile number'}\r\n                    placeholder=\"Mobile Number\"\r\n                    autoComplete=\"tel\"\r\n                    value={values.phone}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={touched.phone && Boolean(errors.phone)}\r\n                    helperText={touched.phone && errors.phone}\r\n                  />\r\n\r\n                  <TextField\r\n                    InputLabelProps={{ shrink: true }}\r\n                    name=\"password\"\r\n                    label={'Password'}\r\n                    placeholder=\"Password\"\r\n                    value={values.password}\r\n                    onChange={handleChange}\r\n                    sx={{\r\n                      input: { color: theme.palette.text.primary },\r\n                      color: theme.palette.text.primary,\r\n                    }}\r\n                    onBlur={handleBlur}\r\n                    autoComplete=\"current-password\"\r\n                    type={showPassword ? 'Text' : 'password'}\r\n                    error={touched.password && Boolean(errors.password)}\r\n                    helperText={touched.password && errors.password}\r\n                    InputProps={{\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton\r\n                            onClick={() => setShowPassword(!showPassword)}\r\n                            edge=\"end\"\r\n                          >\r\n                            <Iconify\r\n                              icon={\r\n                                showPassword\r\n                                  ? 'eva:eye-fill'\r\n                                  : 'eva:eye-off-fill'\r\n                              }\r\n                            />\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  />\r\n                </Stack>\r\n\r\n                <Button\r\n                  sx={{\r\n                    color: theme.palette.common.white,\r\n                    fontSize: {\r\n                      xs: '2.8rem', // Small devices\r\n                      sm: '2.8rem',   // Medium devices\r\n                      md: '1.5rem', // Large devices\r\n                    },\r\n                    backgroundColor: theme.palette.primary.main,\r\n                    '&:hover': {\r\n                      backgroundColor: theme.palette.primary.main,\r\n                    },\r\n                  }}\r\n                  fullWidth\r\n                  size=\"large\"\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"inherit\"\r\n                  disabled={loading}\r\n                >\r\n                  {loading ? 'loading ...' : 'Login'}\r\n                </Button>\r\n\r\n                <Stack\r\n                  direction=\"row\"\r\n                  alignItems=\"center\"\r\n                  justifyContent=\"flex-end\"\r\n                  sx={{ my: 2 }}\r\n                >\r\n                  <Link\r\n                    to=\"/updatePassword\"\r\n                    variant=\"subtitle2\"\r\n                    underline=\"hover\"\r\n                  >\r\n                    Forgot password?\r\n                  </Link>\r\n                </Stack>\r\n              </Box>\r\n              {error ? (\r\n                <Typography\r\n                  variant=\"body1\"\r\n                  color=\"error\"\r\n                  sx={{ my: 2 }}\r\n                  textAlign=\"center\"\r\n                >\r\n                  Error : {error}\r\n                </Typography>\r\n              ) : success ? (\r\n                <Typography\r\n                  variant=\"body1\"\r\n                  color=\"primary\"\r\n                  sx={{ my: 2 }}\r\n                  textAlign=\"center\"\r\n                >\r\n                  {success}.\r\n                </Typography>\r\n              ) : null}\r\n            </Box>\r\n          </Stack>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n"],"names":["LoginPage","_location$state","_location$state$from","theme","useTheme","dispatch","useDispatch","location","useLocation","router","useRouter","showPassword","setShowPassword","useState","loading","error","success","useSelector","state","auth","myplan","JSON","parse","localStorage","getItem","console","log","redirectPath","from","pathname","amount","formik","useFormik","initialValues","phone","password","validationSchema","Yup","required","onSubmit","values","clearError","userLogin","then","res","Swal","icon","title","text","payload","push","catch","err","handleChange","handleSubmit","handleBlur","touched","errors","_jsxs","_Fragment","children","_jsx","Helmet","Grid","container","sx","minHeight","margin","item","xs","sm","md","Box","bgGradient","color","alpha","palette","background","default","imgUrl","display","justifyContent","alignItems","height","Stack","width","backgroundColor","paper","p","maxWidth","textAlign","Typography","variant","paddingY","primary","main","flexDirection","gap","Link","to","secondary","component","spacing","marginY","TextField","InputLabelProps","shrink","name","input","label","placeholder","autoComplete","value","onChange","onBlur","Boolean","helperText","type","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","edge","Iconify","Button","common","white","fontSize","fullWidth","size","disabled","direction","my","underline"],"sourceRoot":""}