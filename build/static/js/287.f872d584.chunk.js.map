{"version":3,"file":"static/js/287.f872d584.chunk.js","mappings":"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","sources":["pages/dashbaord/UserDetails.jsx","pages/dashbaord/Profile.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  Select,\r\n  FormControl,\r\n  InputLabel,\r\n  Checkbox,\r\n  FormControlLabel,\r\n} from '@mui/material';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateUserDetails } from '../../store/authSlice';\r\n\r\nconst UserDetails = ({ userDetails, onSave }) => {\r\n\r\n  const ageOptions = Array.from({ length: 100 }, (_, i) => i + 1);\r\n  const heightOptions = Array.from({ length: 101 }, (_, i) => i + 100);\r\n  const weightOptions = Array.from({ length: 121 }, (_, i) => i + 30); // Weights from 30 kg to 150 kg\r\n  const bodyTypeOptions = ['Slim','Athletic','Average','Stocky','Curvy','Plus Size','Muscular','Petite','Tall','Others',\r\n  ];\r\n  const complexionOptions = ['Fair','Medium','Olive','Dark','Wheatish','Dusky','Tan','Others'];\r\n  const physicalStatusOptions = ['Healthy', 'Physically Challenged'];\r\n  const motherTongueOptions = ['Other', 'Hindi','Bengali','Telugu','Marathi','Tamil','Urdu','Gujarati','Malayalam','Kannada','Odia','Punjabi','Assamese','Maithili','Santali','Kashmiri','Dogri','Manipuri','Nepali','Sindhi','Bodo','English','Rajasthani','Haryanvi','Bihari','Angika','Tulu','Marwari','Pahari','Khandeshi','Sambalpuri']\r\n  const drinkingHabitsOptions = [\r\n    'Non-Drinker',\r\n    'Social Drinker',\r\n    'Regular Drinker',\r\n  ];\r\n  const smokingHabitsOptions = [\r\n    'Non-Smoker',\r\n    'Occasional Smoker',\r\n    'Regular Smoker',\r\n  ];\r\n  const casteOptions = [\r\n    'Brahmin', 'Kshatriya', 'Vaishya', 'Shudra',\r\n    'Scheduled Castes', 'Scheduled Tribes', 'Other Backward Classes',\r\n    'Iyer', 'Iyengar', 'Rajput', 'Maratha', 'Bania', 'Yadav',\r\n    'Dalit', 'Santhal', 'Gond', 'Others'\r\n  ]\r\n  const subCasteOptions = ['others','Iyer','Iyengar','Smartha','Kashmiri Pandit','Saraswat','Maithil','Rajput','Maratha','Khatri','Sikh','Bania','Agarwal','Gupta','Khandelwal','Nishad','Teli','Kumhar','Dhobi','Barber','Dalit','Chamar','Mahaar','Madiga','Valmiki','Gond','Santhal','Munda','Bhil','Oraon','Yadav','Kurmi','Jat','Koeri','Teli']\r\n  const gothraOptions = ['Brahma','Garg','Kashyap','Mishra','Sharma','Shukla','Vats','Awasthi','Saraswat','Bansal','Bhargava','Kaushik','Purohit','Tripathi','Tiwari','Nayak','Rana','Bhardwaj','Siddhanta','Pandey','Others'];\r\n  const star = [\r\n    'others', 'Ashwini', 'Bharani', 'Krittika', 'Rohini',\r\n    'Mrigashirsha', 'Ardra', 'Punarvasu', 'Pushya',\r\n    'Ashlesha', 'Maghā', 'Pūrva Phalgunī', 'Uttara Phalgunī',\r\n    'Hasta', 'Chitra', 'Swati', 'Vishakha',\r\n    'Anuradha', 'Jyeshtha', 'Mula', 'Pūrva Ashadha',\r\n    'Uttara Ashadha', 'Shravana', 'Dhanishta', 'Shatabhisha',\r\n    'Pūrva Bhadrapada', 'Uttara Bhadrapada', 'Revati'\r\n  ]\r\n    const education = ['High School', 'Undergraduate', 'Postgraduate', 'Doctorate']\r\n  const occupation = ['Software Engineer', 'Doctor', 'Teacher', 'Engineer', 'Nurse', 'Accountant', 'Manager', 'Artist', 'Writer', 'Business Owner', 'Unemployed', 'Others']\r\n\r\n  const [formValues, setFormValues] = useState(userDetails);\r\n  const dispatch = useDispatch();\r\n\r\n  console.log('userDetails', userDetails);\r\n  if (userDetails?.profilePhoto) {\r\n\r\n  }\r\n  useEffect(() => {\r\n    setFormValues(userDetails);\r\n  }, [userDetails]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormValues({ ...formValues, [name]: value });\r\n  };\r\n\r\n  const handleCheckboxChange = (e) => {\r\n    const { name, checked } = e.target;\r\n    setFormValues({ ...formValues, [name]: checked });\r\n  };\r\n\r\n  const handleSave = () => {\r\n    dispatch(updateUserDetails(formValues));\r\n  };\r\n\r\n  return (\r\n    <form className='bg-white mt-[25px] px-4 py-7 rounded-[10px]'>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            label=\"Name\"\r\n            name=\"name\"\r\n            value={formValues?.name || ''}\r\n            onChange={handleInputChange}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl fullWidth>\r\n            <InputLabel>Gender</InputLabel>\r\n            <Select\r\n              name=\"gender\"\r\n              value={formValues?.gender || ''}\r\n              onChange={handleInputChange}\r\n            >\r\n              <MenuItem value=\"male\">Male</MenuItem>\r\n              <MenuItem value=\"female\">Female</MenuItem>\r\n              <MenuItem value=\"others\">Others</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            label=\"Date of Birth\"\r\n            name=\"dateOfBirth\"\r\n            type=\"date\"\r\n            value={formValues?.dateOfBirth || ''}\r\n            onChange={handleInputChange}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            label=\"Age\"\r\n            name=\"age\"\r\n            value={formValues?.age || ''} // Use existing form value or empty string\r\n            onChange={handleInputChange}\r\n            fullWidth\r\n            select // Make it a dropdown\r\n          >\r\n            {ageOptions?.map((age) => (\r\n              <MenuItem key={age} value={age}>\r\n                {age}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            label=\"Height (cm)\"\r\n            name=\"height\"\r\n            value={formValues?.height || ''} // Use existing form value or empty string\r\n            onChange={handleInputChange}\r\n            fullWidth\r\n            select // Make it a dropdown\r\n          >\r\n            {heightOptions.map((height) => (\r\n              <MenuItem key={height} value={height}>\r\n                {height}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            label=\"Weight (kg)\"\r\n            name=\"weight\"\r\n            value={formValues?.weight || ''} // Use existing form value or empty string\r\n            onChange={handleInputChange}\r\n            fullWidth\r\n            select // Make it a dropdown\r\n          >\r\n            {weightOptions.map((weight) => (\r\n              <MenuItem key={weight} value={weight}>\r\n                {weight}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl fullWidth>\r\n            <InputLabel>Looking For</InputLabel>\r\n            <Select\r\n              name=\"lookingFor\"\r\n              value={formValues?.lookingFor || ''}\r\n              onChange={handleInputChange}\r\n            >\r\n              <MenuItem value=\"men\">Men</MenuItem>\r\n              <MenuItem value=\"women\">Women</MenuItem>\r\n              <MenuItem value=\"All\">All</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl fullWidth>\r\n            <InputLabel>Marital Status</InputLabel>\r\n            <Select\r\n              name=\"maritalStatus\"\r\n              value={formValues?.maritalStatus || ''}\r\n              onChange={handleInputChange}\r\n            >\r\n              <MenuItem value=\"single\">Single</MenuItem>\r\n              <MenuItem value=\"divorced\">Divorced</MenuItem>\r\n              <MenuItem value=\"widowed\">Widowed</MenuItem>\r\n              <MenuItem value=\"married\">Married</MenuItem>\r\n              <MenuItem value=\"Separated\">Separated</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            label=\"Body Type\"\r\n            name=\"bodyType\"\r\n            value={formValues?.bodyType || ''} // Use existing form value or empty string\r\n            onChange={handleInputChange}\r\n            fullWidth\r\n            select // Make it a dropdown\r\n          >\r\n            {bodyTypeOptions.map((type) => (\r\n              <MenuItem key={type} value={type}>\r\n                {type}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            label=\"Body Complexion\"\r\n            name=\"bodyComplexion\"\r\n            value={formValues?.bodyComplexion || ''} // Use existing form value or empty string\r\n            onChange={handleInputChange}\r\n            fullWidth\r\n            select // Make it a dropdown\r\n          >\r\n            {complexionOptions.map((complexion) => (\r\n              <MenuItem key={complexion} value={complexion}>\r\n                {complexion}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            label=\"Physical Status\"\r\n            name=\"physicalStatus\"\r\n            value={formValues?.physicalStatus || ''} // Use existing form value or empty string\r\n            onChange={handleInputChange}\r\n            fullWidth\r\n            select // Make it a dropdown\r\n          >\r\n            {physicalStatusOptions.map((status) => (\r\n              <MenuItem key={status} value={status}>\r\n                {status}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            label=\"Mother Tongue\"\r\n            name=\"motherTongue\"\r\n            value={formValues?.motherTongue || ''} // Use existing form value or empty string\r\n            onChange={handleInputChange}\r\n            fullWidth\r\n            select // Make it a dropdown\r\n          >\r\n            {motherTongueOptions.map((tongue) => (\r\n              <MenuItem key={tongue} value={tongue}>\r\n                {tongue}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl fullWidth>\r\n            <InputLabel>Eating Habits</InputLabel>\r\n            <Select\r\n              name=\"eatingHabits\"\r\n              value={formValues?.eatingHabits || ''}\r\n              onChange={handleInputChange}\r\n            >\r\n              <MenuItem value=\"vegetarian\">Vegetarian</MenuItem>\r\n              <MenuItem value=\"non-vegetarian\">Non-Vegetarian</MenuItem>\r\n              <MenuItem value=\"vegan\">Vegan</MenuItem>\r\n              <MenuItem value=\"flexitarian\">Flexitarian</MenuItem>\r\n              <MenuItem value=\"halal\">Halal</MenuItem>\r\n              <MenuItem value=\"junk food\">Junk Food</MenuItem>\r\n              <MenuItem value=\"A Little of everything\">A Little of Everything</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            label=\"Drinking Habits\"\r\n            name=\"drinkingHabits\"\r\n            value={formValues?.drinkingHabits || ''} // Use existing form value or empty string\r\n            onChange={handleInputChange}\r\n            fullWidth\r\n            select // Make it a dropdown\r\n          >\r\n            {drinkingHabitsOptions.map((habit) => (\r\n              <MenuItem key={habit} value={habit}>\r\n                {habit}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            label=\"Smoking Habits\"\r\n            name=\"smokingHabits\"\r\n            value={formValues?.smokingHabits || ''} // Use existing form value or empty string\r\n            onChange={handleInputChange}\r\n            fullWidth\r\n            select // Make it a dropdown\r\n          >\r\n            {smokingHabitsOptions.map((habit) => (\r\n              <MenuItem key={habit} value={habit}>\r\n                {habit}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl fullWidth>\r\n            <InputLabel>Religion</InputLabel>\r\n            <Select\r\n              name=\"religion\"\r\n              value={formValues?.religion || ''}\r\n              onChange={handleInputChange}\r\n            >\r\n              <MenuItem value=\"Hinduism\">Hinduism</MenuItem>\r\n              <MenuItem value=\"Sikhism\">Sikhism</MenuItem>\r\n              <MenuItem value=\"Christianity\">Christianity</MenuItem>\r\n              <MenuItem value=\"Jainism\">Jainism</MenuItem>\r\n              <MenuItem value=\"Islam\">Islam</MenuItem>\r\n              <MenuItem value=\"Judaism\">Judaism</MenuItem>\r\n              <MenuItem value=\"Buddhism\">Buddhism</MenuItem>\r\n              <MenuItem value=\"Shinto\">Shinto</MenuItem>\r\n              <MenuItem value=\"Confucianism\">Confucianism</MenuItem>\r\n              <MenuItem value=\"Zoroastrianism\">Zoroastrianism</MenuItem>\r\n              <MenuItem value=\"Others\">Others</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            label=\"Caste\"\r\n            name=\"caste\"\r\n            value={formValues?.caste || ''} // Use existing form value or empty string\r\n            onChange={handleInputChange}\r\n            fullWidth\r\n            select // Make it a dropdown\r\n          >\r\n            {casteOptions.map((caste) => (\r\n              <MenuItem key={caste} value={caste}>\r\n                {caste}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            label=\"Sub Caste\"\r\n            name=\"subCaste\"\r\n            value={formValues?.subCaste || ''} // Use existing form value or empty string\r\n            onChange={handleInputChange}\r\n            fullWidth\r\n            select // Make it a dropdown\r\n          >\r\n            {subCasteOptions.map((subCaste) => (\r\n              <MenuItem key={subCaste} value={subCaste}>\r\n                {subCaste}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            label=\"Gothra\"\r\n            name=\"gothra\"\r\n            value={formValues?.gothra || ''} // Use existing form value or empty string\r\n            onChange={handleInputChange}\r\n            fullWidth\r\n            select // Make it a dropdown\r\n          >\r\n            {gothraOptions.map((gothra) => (\r\n              <MenuItem key={gothra} value={gothra}>\r\n                {gothra}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            label=\"Star\"\r\n            name=\"star\"\r\n            value={formValues?.star || ''}\r\n            onChange={handleInputChange}\r\n            fullWidth\r\n            select\r\n          >\r\n            {star.map(option => (\r\n              <MenuItem key={option} value={option}>\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            label=\"Education\"\r\n            name=\"highestEducation\"\r\n            value={formValues?.highestEducation || ''}\r\n            onChange={handleInputChange}\r\n            fullWidth\r\n            select\r\n          >\r\n            {education.map(option => (\r\n              <MenuItem key={option} value={option}>\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            label=\"Occupation\"\r\n            name=\"occupation\"\r\n            value={formValues?.occupation || ''}\r\n            onChange={handleInputChange}\r\n            fullWidth\r\n            select\r\n          >\r\n            {occupation.map(option => (\r\n              <MenuItem key={option} value={option}>\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            label=\"Income\"\r\n            name=\"annualIncome\"\r\n            value={formValues?.annualIncome || ''}\r\n            onChange={handleInputChange}\r\n            fullWidth\r\n            select\r\n          >\r\n            {[\r\n              '< 20,000',\r\n              '20,000 - 50,000',\r\n              '50,000 - 100,000',\r\n              '> 100,000'\r\n            ].map(option => (\r\n              <MenuItem key={option} value={option}>\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            label=\"Address\"\r\n            name=\"familyLocation\"\r\n            value={formValues?.familyLocation || ''}\r\n            onChange={handleInputChange}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            label=\"Country\"\r\n            name=\"country\"\r\n            value={formValues?.country || ''}\r\n            onChange={handleInputChange}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n\r\n\r\n        <Grid item xs={12}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleSave}\r\n            fullWidth\r\n          >\r\n            Update User Details\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UserDetails;\r\n","import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { clearError, updateUserDetails, userDetailsById } from '../../store/authSlice';\r\nimport Swal from 'sweetalert2';\r\nimport { Avatar, Button, Grid, TextField, Box } from '@mui/material';\r\nimport UserDetails from './UserDetails';\r\nimport { myalldetails } from '../../store/userSlice';\r\nexport const Profile = () => {\r\n  const dispatch=useDispatch();\r\n  const [firstName,setFirstName]=useState('');\r\n  const [lastName,setLastName]=useState('');\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [image, setImage] = useState(null);\r\n  const [newProfilePic, setNewProfilePic] = useState(null);\r\n  const [address, setAddress] = useState({\r\n    deliverAddress: '',\r\n    city: '',\r\n    state: '',\r\n    pinCode: '',\r\n  });\r\n  const { authInfo, error,success } = useSelector(state => state.auth);\r\n   useEffect(()=>{\r\n         if(success){\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Registration Successful',\r\n            text: success,\r\n          });\r\n          dispatch(clearError());\r\n         }\r\n         \r\n   },[success])\r\n\r\n  const { mydetails } = useSelector(state => state.user);\r\n  const profileImage = mydetails?.userDetails?.profilePhoto && `${process.env.REACT_APP_IMASE_BASE_URL}/${mydetails?.userDetails?.profilePhoto?.path}`;\r\n  console.log(\"ProfieImage\",profileImage);\r\n  useEffect(() => {\r\n    if (mydetails?.user) {\r\n      setFirstName(mydetails.user.firstName);\r\n      setLastName(mydetails.user.lastName);\r\n      setEmail(mydetails.user.email);\r\n      setPhone(mydetails.user.phone);\r\n      setImage(profileImage);\r\n    }\r\n  }, [profileImage, mydetails]);\r\n\r\n  useEffect(() => {\r\n    dispatch(userDetailsById());\r\n    dispatch(myalldetails());\r\n    return () => {};\r\n  }, [dispatch]);\r\n\r\n  const handleNameChange = event => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleEmailChange = event => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  const handleProfilePicChange = event => {\r\n    const file = event.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      setImage(file);\r\n      setNewProfilePic(reader.result);\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  const handleAddressChange = event => {\r\n    const { name, value } = event.target;\r\n    setAddress({ ...address, [name]: value });\r\n  };\r\n\r\n  const handleUpdateProfile = e => {\r\n    e.preventDefault();   \r\n     let formData=new FormData();\r\n     formData.append('firstName',firstName);\r\n     formData.append('lastName',lastName);\r\n     formData.append('email',email);\r\n     formData.append('image',image);\r\n    try {\r\n      dispatch(updateUserDetails(formData));\r\n      dispatch(userDetailsById());\r\n    } catch (error) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Oops...',\r\n        text: error,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: theme => `${theme.palette.common.white}`,\r\n          padding: 2,\r\n          borderRadius: 1,\r\n          boxShadow: 1,\r\n        }}\r\n      >\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <label htmlFor=\"profile-pic-input\" style={{ cursor: 'pointer' }}>\r\n                <Avatar\r\n                  alt=\"Profile Picture\"\r\n                  src={\r\n                    newProfilePic || (image && `${image}`)\r\n                  }\r\n                  sx={{\r\n                    width: 120,\r\n                    height: 120,\r\n                    borderRadius: 'full',\r\n                    boxShadow: 1,\r\n                  }}\r\n                />\r\n              </label>\r\n              <input\r\n                id=\"profile-pic-input\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={handleProfilePicChange}\r\n                style={{ display: 'none' }}\r\n              />\r\n            </Box>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12}>\r\n            <TextField\r\n              label=\"First Name\"\r\n              value={firstName}\r\n              onChange={(e)=>setFirstName(e.target.value)}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              label=\"Last Name\"\r\n              value={lastName}\r\n              onChange={(e)=>setLastName(e.target.value)}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              label=\"Phone\"\r\n              value={phone}\r\n              disabled\r\n              onChange={handleNameChange}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={handleEmailChange}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          \r\n        </Grid>\r\n        <Box sx={{ display: 'flex', justifyContent: 'end', marginY: 2 }}>\r\n          <Button\r\n            onClick={handleUpdateProfile}\r\n            variant=\"contained\"\r\n            fullWidth\r\n            color=\"primary\"\r\n          >\r\n            Update Profile\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n      <UserDetails userDetails={mydetails?.userDetails}/>\r\n    </Box>\r\n  );\r\n};\r\nexport default Profile;\r\n"],"names":["_ref","userDetails","onSave","ageOptions","Array","from","length","_","i","heightOptions","weightOptions","formValues","setFormValues","useState","dispatch","useDispatch","console","log","profilePhoto","useEffect","handleInputChange","e","name","value","target","_jsx","className","children","_jsxs","Grid","container","spacing","item","xs","sm","TextField","label","onChange","fullWidth","FormControl","InputLabel","Select","gender","MenuItem","type","dateOfBirth","InputLabelProps","shrink","age","select","map","height","weight","lookingFor","maritalStatus","bodyType","bodyComplexion","complexion","physicalStatus","status","motherTongue","tongue","eatingHabits","drinkingHabits","habit","smokingHabits","religion","caste","subCaste","gothra","star","option","highestEducation","occupation","annualIncome","familyLocation","country","Button","variant","color","onClick","handleSave","updateUserDetails","Profile","_mydetails$userDetail","_mydetails$userDetail2","_mydetails$userDetail3","firstName","setFirstName","lastName","setLastName","setName","email","setEmail","phone","setPhone","image","setImage","newProfilePic","setNewProfilePic","address","setAddress","deliverAddress","city","state","pinCode","authInfo","error","success","useSelector","auth","Swal","icon","title","text","clearError","mydetails","user","profileImage","concat","process","path","userDetailsById","myalldetails","Box","sx","backgroundColor","theme","palette","common","white","padding","borderRadius","boxShadow","display","justifyContent","alignItems","htmlFor","style","cursor","Avatar","alt","src","width","id","accept","event","file","files","reader","FileReader","onloadend","result","readAsDataURL","disabled","marginY","preventDefault","formData","FormData","append","UserDetails"],"sourceRoot":""}